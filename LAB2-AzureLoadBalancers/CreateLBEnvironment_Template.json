
{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for VM"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for VMs"
      }
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 5,
      "metadata": {
        "description": "Number of VMs to deploy, limit 5 since this sample is using a single storage account"
      }
    },	
   "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://netessentials.blob.core.windows.net/netessent-blb"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "defaultValue": ""
},

	"vmNamePrefix": {
      "type": "string",
      "defaultValue": "WebServer",
      "metadata": {
        "description": "VM name prefix"
      }
    },
    "OS": {
      "type": "string",
      "defaultValue": "Windows",
      "allowedValues": [
        "Ubuntu",
        "Windows"
      ],
      "metadata": {
        "description": "OS Platform for the VM"
      }
    },
	"uniqueDnsNameForPublicIP": {
     "type": "string",
	 "defaultValue": "GEN-UNIQUE"
},
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "virtualNetworkName": "NEvNET1",
    "publicIPAddressName": "[concat(variables('namingInfix'), 'pip')]",
    "namingInfix": "[toLower(substring(concat(parameters('vmNamePrefix'), uniqueString(resourceGroup().id)), 0, 9))]",
    "longNamingInfix": "[toLower(parameters('vmNamePrefix'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet1Prefix": "10.0.0.0/24",
    "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('virtualNetworkName'),variables('subnet1Name'))]",
	"scriptFolder": ".",
    "scriptFileName": "ConfigureWebServers.ps1",
    "availabilitySetName": "NEAvailabilitySet",
    "Windows": {
      "publisher": "MicrosoftWindowsServer",
      "offer": "WindowsServer",
      "sku": "2019-Datacenter",
      "version": "latest"
    },
    "imageReference": "[variables(parameters('OS'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2,
        "managed": true
      }
    },
{
   "type": "Microsoft.Compute/virtualMachines/extensions",
   "name": "[concat(parameters('vmNamePrefix'),copyindex(),'/', 'extensionName')]",
   "apiVersion": "2015-06-15",
   "location": "[parameters('location')]",
     "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
    },
   "dependsOn": [
       "[concat(parameters('vmNamePrefix'), copyindex())]"
   ],
   "properties": {
       "publisher": "Microsoft.Compute",
       "type": "CustomScriptExtension",
       "typeHandlerVersion": "1.8",
       "autoUpgradeMinorVersion":true,
       "settings": {
           "fileUris": [
           "[concat(parameters('_artifactsLocation'), '/', variables('ScriptFolder'), '/', variables('ScriptFileName'), parameters('_artifactsLocationSasToken'))]"		   
       ],
	    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFolder'), '/', variables('scriptFileName'))]"
					}   
     } 
	 
 },
	{
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "apiVersion": "2016-03-30",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('nic', copyindex())]",
      "apiVersion": "2016-03-30",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[variables('virtualNetworkName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), copyIndex())]",
      "apiVersion": "2016-04-30-preview",
      "location": "[parameters('location')]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "nicLoop"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_D4_v3"
        },
        "osProfile": {
          "computerName": "[concat('WebServer', copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('nic', copyindex()))]"
            }
          ]
        }
      }
    }
  ]
}